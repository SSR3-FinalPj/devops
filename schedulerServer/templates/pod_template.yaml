apiVersion: v1
kind: Pod
metadata:
  name: airflow-worker-pod-template
  namespace: {{ .Values.namespace }}
spec:
  serviceAccountName: {{ .Values.main.serviceAccount.name }} # 이 서비스 전용 서비스 계정 사용
  restartPolicy: Never
  containers:
  - name: base
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    imagePullPolicy: Always
    resources: 
      {{- toYaml .Values.main.resources | nindent 12 }}
    env:
    - name: AIRFLOW__CORE__DAGS_FOLDER
      value: /opt/airflow/generated_dags
    # - name: SEOUL_API_KEY
    #   valueFrom:
    #     secretKeyRef:
    #       name: api-service-secrets
    #       key: SEOUL_API_KEY
    - name: PYTHONPATH
      value: /opt/airflow
    - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
      value: postgresql+psycopg2://airflow:airflow@postgres/airflow
    # - name: YOUTUBE_API_KEY
    #   valueFrom:
    #     secretKeyRef:
    #       name: api-service-secrets
    #       key: YOUTUBE_API_KEY
    # - name: REDDIT_CLIENT_ID
    #   valueFrom:
    #     secretKeyRef:
    #       name: api-service-secrets
    #       key: REDDIT_CLIENT_ID
    # - name: REDDIT_CLIENT_SECRET
    #   valueFrom:
    #     secretKeyRef:
    #       name: api-service-secrets
    #       key: REDDIT_CLIENT_SECRET
    # - name: REDDIT_USERNAME
    #   valueFrom:
    #     secretKeyRef:
    #       name: api-service-secrets
    #       key: REDDIT_USERNAME
    # - name: REDDIT_PASSWORD
    #   valueFrom:
    #     secretKeyRef:
    #       name: api-service-secrets
    #       key: REDDIT_PASSWORD
    # - name: REDDIT_USER_AGENT
    #   valueFrom:
    #     secretKeyRef:
    #       name: api-service-secrets
    #       key: REDDIT_USER_AGENT
    envFrom:
      - secretRef:
          name: {{ .Values.main.secrets.name }}
    volumeMounts:
      - name: dags-volume
        mountPath: /opt/airflow/generated_dags
  volumes:
  - name: dags-volume
    persistentVolumeClaim:
      claimName: dags-pvc